# ===== BigBlueButton API (from `bbb-conf --secret`) =====
BBB_API_BASE=https://YOUR_BBB_HOST/bigbluebutton/api
BBB_SECRET=CHANGE_ME

# ===== Public base URL of the bot (exact path your Nginx exposes) =====
# IMPORTANT: NO trailing slash
PUBLIC_BASE_URL=https://YOUR_BBB_HOST/ally

# ===== Alibaba Cloud Model Studio (DashScope App) =====
DASHSCOPE_API_KEY=sk-...
APP_ID=your_app_id

# ===== Trigger phrase and bot display name =====
ALLY_TRIGGER=@ally
ALLY_NAME=Ally

# ===== Redis =====
# If using docker-compose's redis service:
REDIS_URL=redis://redis:6379
# Or for host redis:
# REDIS_URL=redis://localhost:6379

# ===== Webhook signature verification =====
WEBHOOK_CHECKSUM_ALG=sha256
WEBHOOK_STRICT=true
WEBHOOK_PRUNE=false

# ===== Moderator-only enforcement =====
ALLY_REQUIRE_MOD=true

# ===== Dedupe identical asks (same user/meeting) within N seconds =====
DUP_TTL_SECONDS=8

# ===== Make answers concise (<= ~6 sentences) =====
QWEN_CONCISE=false

# ===== DashScope robustness =====
QWEN_TIMEOUT_MS=60000
QWEN_MAX_RETRIES=2
QWEN_RETRY_BACKOFF_MS=800

# ===== Overflow protection / session rollover =====
# Safety cap for user prompt characters you send to the App.
QWEN_MAX_INPUT_CHARS=7000
# If DashScope says the input is too long, clear session & retry once.
AUTO_RESET_ON_OVERFLOW=true
# Show a human-readable hint (throttled) when the App context is too big.
OVERFLOW_HINT_ENABLED=true
OVERFLOW_HINT_COOLDOWN_S=60

# ===== Manual reset phrases (comma-separated) =====
ALLY_RESET_PHRASES=reset,new topic,clear,forget,reset chat,reset session,start over

# ===== Loading indicator (typing...) =====
ALLY_LOADING_ENABLED=true
ALLY_LOADING_DELAY_MS=1000
ALLY_LOADING_TEXT=⏳ Assistant is thinking…

# ===== BBB chat output chunking (avoid word breaks) =====
# The server splits long replies on natural boundaries up to this size.
BBB_CHAT_MAX_CHARS=450

# ===== HTTP port the bot listens on =====
PORT=8080
